.. _registries:

Registries, Forms and Sections
==============================


Registry
--------
In RDRF, a "registry" is just a named collection of forms. A Registry is created by an admin user
by selecting "Registries" from "Admin Page" (under the Admin user icon in the banner on the top right)  and clicking "Add".

A Registry must have a non-blank name and a code (which should not contain spaces).


Forms
-----

A form is a single "screen" of information in RDRF and consists of a group of named
Sections. To create a form, select "Registry Form" from "Admin Page" and clicking "Add".

Form names should not include spaces (e.g. ClinicalData), however the form name will appear as Clinical Data if captial letters are used for separate words.

A form is defined by the following features:


Registry
--------
A link to the Registry that owns the form. A form can only exist in one
registry at a time.


Name
----
The display name to use (this will appear in the "Patient Listing" under "Modules".


Sections
--------
The section *codes* that comprise this form, listed in a comma-separated list.

Example
^^^^^^^

* SECTIONA,SECTIONB


Is Questionnaire
----------------

A checkbox to indicate whether this form is exposed as a public questionnaire.

Questionnaire forms are not loaded from the dashboard but access via an autogenerated URL
 /<regcode>/questionnaire

An autogenerated approval form (for curators) is created also.



Sections
--------
A section is a named group of fields that can be inserted into a Form.

Sections consist of:


Code
----
A section must have a non-blank code (no spaces) which is just a text value. Section codes must be unique.
The code of a section is used to refer to it, when used in a Form.

Example: "FHSECTION34" or "SEC001"


Display Name
------------
A string which will be displayed on the form to mark the start of the section.

Example: "Physical Characteristics" , "Contact Information" 


Elements
--------
The :ref:`DEs <des>` codes of any fields comprising that section.

This *must* be a comma-demlited list of :ref:`DE codes <des>`.

Example: "CDEName, CDEAge" 

(This would mean that the section would consist of two
data input fields - one defined by the :ref:`Data Element <des>` with :ref:`code <des>` "CDEName"
and one defined by the Common Data Element with code "CDEAge")

NB. Spaces between codes is *not* significant.


Allow multiple
--------------

A boolean flag indicating whether  multiple entries of this section can added ( or removed ) on the form.

Example
^^^^^^^

A friends section might be defined with cdes for name and email address etc.
Marking the section as "allow multiple" would cause an "Add" and "Remove" button
to be added to the form so multiple friends could be added (or deleted.)

Extra
-----
If allow multiple is checked, this causes extra (blank) copies of the initial section to be displayed.
 
